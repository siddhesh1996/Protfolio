{"version":3,"sources":["serviceWorker.js","redux/Reducer/appReducer/index.js","redux/ActionTypes/index.js","redux/Reducer/index.js","common/config.js","components/timer/index.js","components/layerOne/index.js","components/layerTwo/index.js","components/landingScreen/index.js","screens/Home/index.js","screens/NoMatch/index.js","routes.js","store.js","index.js"],"names":["Boolean","window","location","hostname","match","initialState","isFetched","appReducer","state","action","type","combineReducers","reducers","config","URL_BASE","origin","IMG_BASE","IMG_EXT","png","jpg","MENU","id","transKey","isRemove","isHide","isDisable","isMaster","isClickable","link","isActive","authRequired","class","Timer","props","this","dd","mm","yy","dateObj","Date","calculatedYear","getFullYear","calculatedMonth","getMonth","calculatedDate","getDate","console","log","Component","LayerOne","hideShowCursor","blinkClass","mainBg","className","style","backgroundImage","LayerTwo","LandingScreen","Home","goAhead","setTimeout","setState","NoMatch","Routes","fallback","exact","path","store","createStore","indexReducer","Store","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.658f4d4a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  IS_API_FETCHED\r\n} from '../../ActionTypes'\r\n\r\nconst initialState = {\r\n  isFetched: false\r\n}\r\n\r\nexport default function appReducer(state = initialState, action) {\r\n  switch(action.type) {\r\n    case IS_API_FETCHED: {\r\n      return {\r\n        ...state,\r\n        isFetched: true\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}","export const IS_API_FETCHED = 'IS_API_FETCHED';","import { combineReducers } from 'redux'\r\nimport * as reducers from './appReducer'\r\n\r\nexport default combineReducers(reducers);","let config = {};\r\nconfig.URL_BASE = window.location.origin;\r\nconfig.IMG_BASE = '/images';\r\nconfig.IMG_EXT = {\r\n  png: '.png',\r\n  jpg: '.jpg'\r\n}\r\nconfig.MENU = [\r\n  {\r\n      id: 1,\r\n      transKey: 'Home',\r\n      isRemove: false,\r\n      isHide: false,\r\n      isDisable: false,\r\n      isMaster: false,\r\n      isClickable: true,\r\n      link: '/home',\r\n      isActive: false,\r\n      authRequired: false,\r\n      class: '',\r\n  }\r\n];\r\n\r\nexport default config;\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Timer extends Component {\r\n  render() {\r\n    let self = this;\r\n    let { props } = self;\r\n    let { dd, mm , yy } = props;\r\n    let dateObj = new Date();\r\n    let calculatedYear = (dateObj.getFullYear() - yy);\r\n    let calculatedMonth = ((dateObj.getMonth() + 1) - mm);\r\n    let calculatedDate = (dateObj.getDate() - dd);\r\n    console.log(calculatedYear,calculatedMonth, calculatedDate);\r\n    return <span>{`${calculatedYear} years ${calculatedMonth} months ${calculatedDate} days`}</span>\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport config from '../../common/config';\r\nimport Timer from '../timer';\r\n\r\nexport default class LayerOne extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hideShowCursor: false\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    // setInterval(() => {\r\n    //   if(this.state.hideShowCursor) {\r\n    //     this.setState({\r\n    //       hideShowCursor: false\r\n    //     })\r\n    //   } else {\r\n    //     this.setState({\r\n    //       hideShowCursor: true\r\n    //     })\r\n    //   }\r\n    // }, 200);\r\n  }\r\n\r\n  render() {\r\n    let self = this;\r\n    const { state } = self;\r\n    const { hideShowCursor } = state;\r\n    let blinkClass = hideShowCursor ? 'hide' : 'show';\r\n    let profileUrl = `url(${config.IMG_BASE}/profile_bw${config.IMG_EXT['jpg']})`\r\n    let mainBg = {\r\n      className: 'bg__main',\r\n      style: {\r\n        backgroundImage: profileUrl\r\n      }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n      <div className=\"bg__layer__One\">\r\n        <div {...mainBg}>\r\n          <div className=\"info\">\r\n            <h1 className=\"title bitFont\">Hello world<span className={`cursor ${blinkClass}`}>_</span></h1>\r\n            <p>\r\n              var name = Siddhesh Ravindra Kasar;\r\n            </p>\r\n            <p>\r\n              var age = {<Timer dd=\"08\" mm=\"01\" yy=\"1996\" />};\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport config from '../../common/config';\r\n\r\nexport default class LayerTwo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  render() {\r\n    let self = this;\r\n    const { state } = self;\r\n    const {  } = state;\r\n\r\n    return (\r\n      <div className=\"bg__layer__Two\">\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}","\r\nimport React, { Component } from 'react';\r\n// import config from '../../common/config';\r\nimport LayerOne from '../layerOne';\r\nimport LayerTwo from '../layerTwo'; \r\n\r\nexport default class LandingScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  render() {\r\n    const self = this;\r\n    const { state } = self;\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <LayerOne />\r\n        <LayerTwo />\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport LandingScreen from '../../components/landingScreen';\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      goAhead: false\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.setState({ goAhead: true });\r\n    }, 1000)\r\n  }\r\n\r\n  render() {\r\n    const self = this;\r\n    const { state } = self;\r\n    const { goAhead } = state;\r\n\r\n    return (goAhead ? <LandingScreen /> : <div className=\"center_align bitFont\">Loading...</div>);\r\n  }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class NoMatch extends Component {\r\n  render() {\r\n    return (<div>NoMatch</div>);\r\n  }\r\n}","import React, { Component, Suspense } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport Home from './screens/Home';\r\nimport NoMatch from './screens/NoMatch';\r\n\r\nexport default class Routes extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"main-container\">\r\n        <Suspense fallback={<div>Loader..</div>}>\r\n          <Router>\r\n            <Switch>\r\n              <Route exact path='/'>\r\n                <Home />\r\n              </Route>\r\n              <Route path='*'>\r\n                <NoMatch />\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n        </Suspense>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\nimport {createStore, /* applyMiddleware */ } from 'redux';\nimport { Provider } from 'react-redux'\n// import logger from 'redux-logger';\nimport indexReducer from './redux/Reducer';\nimport Routes from './routes';\n// import thunk from 'redux-thunk';\n\n\nlet store = createStore(indexReducer);\n\nclass Store extends Component {\n    render() {\n      return (\n        <Provider store={store}>\n          <Routes/> \n        </Provider>\n      )\n    }\n}\n\nexport default Store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport Store from './store';\n\nReactDOM.render(<Store />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}